# -*- coding: utf-8 -*-
"""Complete Pandas Tutorial in Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11MqeUxe1UN_0ls8Ba_DblVPuelSsTjJH

#Pandas Library
Useful for Data Processing & Analysis

#Pandas Data Frame
Pandas DataFrame is two-dimensional tabular data structure with labeled axes (rows and columns)
"""

# importing the pandas library
import pandas as pd

"""#Creating a Pandas DataFrame"""

# importing ths boston house price data
from sklearn.datasets import fetch_california_housing

california_dataset = fetch_california_housing()

type(california_dataset)

print(california_dataset)

# pandas DataFrame
california_df = pd.DataFrame(california_dataset.data, columns = california_dataset.feature_names)

type(california_df)

california_df.head()

california_df.shape

"""#Importing the data from CSV file to a pandas DataFrame"""

# csv file to pandas df
diabetes_df = pd.read_csv('/content/diabetes.csv')

type(diabetes_df)

diabetes_df.head()

diabetes_df.shape

"""#Loading the data from a excel file to a Pandas DataFrame
pd.read_excel('file path')

#Exporting a DataFrame to a csv file
"""

california_df.to_csv('california.csv')

"""#Exporting the Pandas DataFrame to an excel File
df.to_excel('filename')
"""

# creating a DataFrame with random values
import numpy as np
random_df = pd.DataFrame(np.random.rand(20,10))

random_df.head()

random_df.shape

"""#Inspecting a DataFrame"""

# finding the number of rows & columns
california_df.shape

# first 5 rows in a DataFrame
california_df.head()

# last 5 rows in a DataFrame
california_df.tail()

# informations about the DataFrame
california_df.info()

# findingthe number of missing values
california_df.isnull().sum()

diabetes_df.head()

# counting the values based on the labels
diabetes_df.value_counts('Outcome')

# group the values based on the mean
diabetes_df.groupby('Outcome').mean()

"""#Statistical Measures"""

# count or number of values
california_df.count()

# mean value - column wise
california_df.mean()

# standard deviation - column wise
california_df.std()

# minimum value
california_df.min()

# maximum value
california_df.max()

# all the statistical measure about the dataframe
california_df.describe()

"""#Manupilating the Dataframe"""

# adding a column to a dataframe
california_df['Price'] = california_dataset.target

california_df.head()

# removing a row
california_df.drop(index=0, axis=0)

# drop a column
california_df.drop(columns='MedInc', axis=1)

# locating a row using the index value
california_df.iloc[2]

# locating a column using the index value
california_df.iloc[:,0] # first column
california_df.iloc[:,1] # second column
california_df.iloc[:,2] # third column
california_df.iloc[:,-1] # last column

"""#Correlation


1.   Positive Correlation
2.   Negative Correlation


"""

california_df.corr()